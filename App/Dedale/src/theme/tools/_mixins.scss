@mixin clearfix {
	clear: both; zoom: 1;
	&:before, &:after { content: " "; display: table; }
	&:after { clear: both; line-height: 0; visibility: hidden;
  	}
}
/* resolution */
@mixin background-image-2x($file, $type, $width, $height) {
  @media only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (-moz-min-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx){
    & {
      background-image: url('../img/' + $file + '@2x.' + $type);
      -webkit-background-size: $width $height;
      -moz-background-size: $width $height;
      -o-background-size: $width $height;
      background-size: $width $height;
    }
  }
}
@mixin FS($size, $parag: false) {
  font-size: $size + px;
  font-size: ($size / 16) + rem;
  line-height: $size + px;
  line-height: ($size / 16) + rem;
  
  @if $parag == true {
    $px: $size * 30; 
    max-width: $px + px;
    max-width: ($px / 16) + rem;
  }
}
@mixin font-size($size) {
  font-size: $size + px;
  font-size: ($size / 16) + rem;
}
@mixin line-height($size: 12 ){
  line-height: $size + px;
  line-height: ($size / 16) + rem;
}
@mixin para-max($font-size) {
  $px: $font-size * 30; 
  max-width: $px + px;
  max-width: ($px / 16) + rem;
}

@mixin triangle($direction, $size: 6px, $color: #222){
  content: ''; display: block; position: absolute; height: 0; width: 0;
  @if ($direction == 'up'){
    border-bottom: $size solid $color; border-left: 1/2*$size solid transparent; border-right: 1/2*$size solid transparent;
  }
  @else if ($direction == 'down'){
    border-top: $size solid $color; border-left: 1/2*$size solid transparent; border-right: 1/2*$size solid transparent;
  }
  @else if ($direction == 'left'){
    border-top: 1/2*$size solid transparent; border-bottom: 1/2*$size solid transparent; border-right: $size solid $color;
  }
  @else if ($direction == 'right'){
    border-top: 1/2*$size solid transparent; border-bottom: 1/2*$size solid transparent; border-left: $size solid $color;
  }
}

@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin pos($position, $pos_t, $pos_r:$pos_t, $pos_b:$pos_t, $pos_l:$pos_r){
    position: $position;
	top: $pos_t; right: $pos_r;
	bottom: $pos_b; left: $pos_l;
}

@mixin margin($marg_t, $marg_r:$marg_t, $marg_b:$marg_t, $marg_l:$marg_r) {
    margin-top:    $marg_t;       margin-right: $marg_r;
    margin-bottom: $marg_b;       margin-left:  $marg_l;
}
@mixin padding($pad_t, $pad_r:$pad_t, $pad_b:$pad_t, $pad_l:$pad_r) {
    padding-top:    $pad_t + px;       padding-right: $pad_r + px;
    padding-bottom: $pad_b + px;       padding-left:  $pad_l + px;

    padding-top:    ($pad_t / 16) + rem;       padding-right: ($pad_r / 16) + rem;
    padding-bottom: ($pad_b / 16) + rem;       padding-left:  ($pad_l / 16) + rem;
}

@mixin bg($img-uri, $pos:initial, $repeat:no-repeat, $atth:initial, $size:initial) {
  background-image: url($img-uri);
	background-position: $pos;
	background-repeat: $repeat;
	background-attachment: $atth;
  background-size: $size;
}

@mixin size($width, $height:$width) {
  width: $width;
  height: $height;
}
@mixin max-size($width, $height:$width) {
  max-width: $width;
  max-height: $height;
}
@mixin min-size($width, $height:$width) {
	min-width: $width;
	min-height: $height;
}

@mixin box-shadow($param){
    -webkit-box-shadow: $param;
    -moz-box-shadow: $param;
    box-shadow: $param;
}

@mixin breakpoint($type, $size) {
	@if $type == min {
		@media (min-width: $size) { @content; }
	}
	@else if $type == max {
		@media (max-width: $size) { @content; }
	}
}

$trs: 200ms ease-in-out;
._trs { transition: all $trs; }
